import sys
import numpy as np
import pandas

from numpy import genfromtxt, savetxt
from sklearn.cross_validation import cross_val_score
from sklearn.ensemble import RandomForestClassifier
from sklearn.ensemble import ExtraTreesClassifier

dataset_train_filepath = 'dataset/train_info.csv'
dataset_test_filepath = 'dataset/test_info.csv'
#outputFilePath = 'dataset/submission.csv'

if len(sys.argv)>=3:
    dataset_train_filepath = sys.argv[1]
    dataset_test_filepath = sys.argv[2]
else:
    print "Using default dataset path 'dataset/*.csv'"


def parsefile(filepath):
    f = pandas.read_csv(filepath, comment="#", header=None, engine='c', dtype={0: 'object'})

    md5 = None
    label = None
    data = None

    column_attr = f.ix[0:0,:]
    if 'md5' == column_attr[0][0]: #train dataset with title and label
        f = f.ix[1:,0:] #remove first row
        la = f.ix[0:,1:1]
        label = np.array(la,dtype="int")
        da = f.ix[0:,2:].replace(np.nan,0, regex=True)
    else:
        da = f.ix[0:,1:].replace(np.nan,0, regex=True)
    md5 = f.ix[0:,:0]
    data = np.array(da)
    return data, label, md5

def load_file_test():
    data, label, md5 = parsefile('dataset/train_info.csv')
    print data, label, md5
    data, label, md5 = parsefile('dataset/test_info.csv')
    print data, label, md5


def exefunc(trainFilePath, testFilePath):
    # Load train data
    data, label, md5 = parsefile(trainFilePath)
    # Load test data
    tdata, tlabel, tmd5 = parsefile(testFilePath)
    X = data
    y = label.transpose()[0]

    clf = RandomForestClassifier(n_estimators=10, max_depth=None,
        min_samples_split=1, random_state=0)
    scores = cross_val_score(clf, X, y)
    print 'Random Forest score mean: '+ str(scores.mean())
    
    clf = ExtraTreesClassifier(n_estimators=10, max_depth=None,
        min_samples_split=1, random_state=0)
    scores = cross_val_score(clf, X, y)
    print 'Extra Tree score mean: '+str(scores.mean())

#    if outputFilePath:
#        savetxt(outputFilePath, clf.predict(tdata), delimiter=',', fmt='%f')


if __name__=='__main__':
    exefunc(dataset_train_filepath,dataset_test_filepath)

