import numpy as np
from sklearn.cross_validation import cross_val_score
from sklearn.datasets import make_blobs
from sklearn.ensemble import RandomForestClassifier
from sklearn.ensemble import ExtraTreesClassifier
from sklearn.tree import DecisionTreeClassifier
import numpy as np
import pandas

def parsefile(filepath):
    f = pandas.read_csv(filepath, comment="#", header=None, engine='c', dtype={0: 'object'})

    md5 = None
    label = None
    data = None

    drop_cols = [54,66,68,69,72,74,81,83,85,87,89,90,95,98,106,109,111,116,117,135,137,
                 140,142,147,149,160,163,165,166,168,171,172,175,176,180,181,185,187,194,205,209]
    
    #drop_cols2 = [62] # 19,42,46,62,63,101,102,163,164,166
    
    column_attr = f.ix[0:0,:]
    if 'md5' == column_attr[0][0]: #train dataset with title and label
        f = f.ix[1:,0:] #remove first row
        la = f.ix[0:,1:1]
        label = np.array(la,dtype="int")
        da = f.ix[0:,2:].replace(np.nan,0, regex=True)
    else:
        da = f.ix[0:,1:].replace(np.nan,0, regex=True)
    md5 = f.ix[0:,:0]
    #drop 
    da.drop(da.columns[drop_cols],axis=1,inplace=True)
    #da.drop(da.columns[drop_cols2],axis=1,inplace=True)
    data = np.array(da)
    return data, label, md5




#LOAD TRAIN DATA
data, label, md5 = parsefile('dataset/train_info+import+asm+rom_select5.csv')
#LOAD TEST DATA
tdata, tlable, tmd5 = parsefile('dataset/test_new_data_info+import+asm+rom_select4.csv')

X = data
y = label.transpose()[0]

clf = ExtraTreesClassifier(n_estimators=2500, max_depth=None, 
    criterion='entropy',
    min_samples_split=2, random_state=0)
scores = cross_val_score(clf, X, y, cv=100, scoring='roc_auc', n_jobs=-1)
scores.mean()

#from sklearn.ensemble import RandomForestRegressor
clf.fit(data, label)
clf.predict(tdata)

from numpy import genfromtxt, savetxt
savetxt('dataset/submission20160717_1.csv', clf.predict(tdata), delimiter=',', fmt='%f')