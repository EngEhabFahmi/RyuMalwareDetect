import sys
import csv
import os
import json

datadir = '/Users/dragonjohn/Documents/DevEnv/Python/MLCR2malwareDetect/dataset/'
train_CSV_file = 'train.csv'
output_train_csv_file = 'train_info.csv'
output_test_csv_file = 'test_info.csv'

# select feature
info_feature_selected = [1, 4, 7, 8, 9, 11, 12, 14, 18, 23, 26, 29, 30, 32, 33, 34]

if len(sys.argv)>=2:
    datadir = sys.argv[1]
else:
    print "no dataset directory provided"
    exit(1)

def select_info_feature():
    selected_label = []
    with open('info_label.txt', 'rb') as info_label_file:
        labels = info_label_file.readlines()
        for idx, row in enumerate(labels):
            if idx in info_feature_selected:
                selected_label.append(row.rstrip())
    return selected_label

def get_info_train_dataset(selected_features):
    train_x = []
    title_row = ['md5']+ selected_features
    train_x.append(title_row)
    with open(datadir + train_CSV_file, 'rb') as csvfile:
        spamreader = csv.reader(csvfile, delimiter = ',', quotechar='"')
        for row in spamreader:
            data_row = []
            #data_row.append(row[1])
            data_row.append(row[0])
            with open(datadir + 'train/' + row[0] + '/info') as info_file:
                data = json.load(info_file)
                for key, value in data.items():
                    if key in selected_features:
                        data_row.append(value)
            train_x.append(data_row)
    return train_x

def get_info_test_dataset(selected_features):
    test_x = []
    for filefolder in os.listdir(datadir + 'test/'):
        if filefolder.startswith('.'):
            continue
        data_row = []
        data_row.append(filefolder)
        with open(datadir + 'test/' + filefolder +'/info') as info_file:
            data = json.load(info_file)
            for key, value in data.items():
                if key in selected_features:
                    data_row.append(value)
        test_x.append(data_row)
    return test_x

if __name__=='__main__':
    selected_features = select_info_feature()
    train_x = get_info_train_dataset(selected_features)
    if not os.path.exists('dataset/'):
        os.mkdir('dataset/')
    with open('dataset/' + output_train_csv_file,'wb') as train_output:
        writer = csv.writer( train_output, delimiter=",")
        for row in train_x:
            writer.writerow(row)

    test_x = get_info_test_dataset(selected_features)
    with open('dataset/' + output_test_csv_file, 'wb') as test_output:
        writer = csv.writer( test_output, delimiter=",")
        for row in test_x:
            writer.writerow(row)

